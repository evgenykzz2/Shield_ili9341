#include "VideoDecoder.h"
#include "config.h"

VideoDecoder::VideoDecoder()
{}

void VideoDecoder::Decode4x4( uint8_t l0, uint8_t h0,   uint8_t l1, uint8_t h1,   uint8_t l2, uint8_t h2,   uint8_t l3, uint8_t h3 )
{
    for ( uint8_t i = 0; i < 4; ++i )
    {
        TFT_DATAPIN_SET(h0); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l0); TFT_SWAP_DATA_WR
        TFT_DATAPIN_SET(h0); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l0); TFT_SWAP_DATA_WR
        TFT_DATAPIN_SET(h0); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l0); TFT_SWAP_DATA_WR
        TFT_DATAPIN_SET(h0); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l0); TFT_SWAP_DATA_WR

        TFT_DATAPIN_SET(h1); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l1); TFT_SWAP_DATA_WR
        TFT_DATAPIN_SET(h1); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l1); TFT_SWAP_DATA_WR
        TFT_DATAPIN_SET(h1); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l1); TFT_SWAP_DATA_WR
        TFT_DATAPIN_SET(h1); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l1); TFT_SWAP_DATA_WR
    }
    for ( uint8_t i = 0; i < 4; ++i )
    {
        TFT_DATAPIN_SET(h2); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l2); TFT_SWAP_DATA_WR
        TFT_DATAPIN_SET(h2); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l2); TFT_SWAP_DATA_WR
        TFT_DATAPIN_SET(h2); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l2); TFT_SWAP_DATA_WR
        TFT_DATAPIN_SET(h2); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l2); TFT_SWAP_DATA_WR

        TFT_DATAPIN_SET(h3); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l3); TFT_SWAP_DATA_WR
        TFT_DATAPIN_SET(h3); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l3); TFT_SWAP_DATA_WR
        TFT_DATAPIN_SET(h3); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l3); TFT_SWAP_DATA_WR
        TFT_DATAPIN_SET(h3); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l3); TFT_SWAP_DATA_WR
    }
}

void VideoDecoder::Decode8x8_mono16( uint8_t l0, uint8_t h0,   uint8_t l1, uint8_t h1,   const uint8_t* bin )
{
    for ( uint8_t y = 0; y < 8; ++y )
    {
        uint8_t v = bin[y];
        if ( (v & 1) != 0 )
        { TFT_DATAPIN_SET(h1); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l1); TFT_SWAP_DATA_WR } else
        { TFT_DATAPIN_SET(h0); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l0); TFT_SWAP_DATA_WR }

        if ( (v & 2) != 0 )
        { TFT_DATAPIN_SET(h1); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l1); TFT_SWAP_DATA_WR } else
        { TFT_DATAPIN_SET(h0); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l0); TFT_SWAP_DATA_WR }

        if ( (v & 4) != 0 )
        { TFT_DATAPIN_SET(h1); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l1); TFT_SWAP_DATA_WR } else
        { TFT_DATAPIN_SET(h0); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l0); TFT_SWAP_DATA_WR }

        if ( (v & 8) != 0 )
        { TFT_DATAPIN_SET(h1); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l1); TFT_SWAP_DATA_WR } else
        { TFT_DATAPIN_SET(h0); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l0); TFT_SWAP_DATA_WR }

        if ( (v & 16) != 0 )
        { TFT_DATAPIN_SET(h1); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l1); TFT_SWAP_DATA_WR } else
        { TFT_DATAPIN_SET(h0); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l0); TFT_SWAP_DATA_WR }

        if ( (v & 32) != 0 )
        { TFT_DATAPIN_SET(h1); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l1); TFT_SWAP_DATA_WR } else
        { TFT_DATAPIN_SET(h0); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l0); TFT_SWAP_DATA_WR }

        if ( (v & 64) != 0 )
        { TFT_DATAPIN_SET(h1); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l1); TFT_SWAP_DATA_WR } else
        { TFT_DATAPIN_SET(h0); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l0); TFT_SWAP_DATA_WR }

        if ( (v & 128) != 0 )
        { TFT_DATAPIN_SET(h1); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l1); TFT_SWAP_DATA_WR } else
        { TFT_DATAPIN_SET(h0); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l0); TFT_SWAP_DATA_WR }
    }
}

static const uint8_t g_primitive[] PROGMEM =
{
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xc0,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x18,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x03,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,
    0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x80,
    0x00,0x00,0x00,0x00,0x00,0x00,0x80,0xc0,
    0x00,0x00,0x00,0x00,0x00,0x00,0xc0,0xc0,
    0x00,0x00,0x00,0x00,0x00,0x00,0xc0,0xf0,
    0x00,0x00,0x00,0x00,0x00,0x00,0xe0,0xf8,
    0x00,0x00,0x00,0x00,0x00,0x00,0x18,0x7e,
    0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x01,
    0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x03,
    0x00,0x00,0x00,0x00,0x00,0x00,0x03,0x03,
    0x00,0x00,0x00,0x00,0x00,0x00,0x03,0x0f,
    0x00,0x00,0x00,0x00,0x00,0x00,0x07,0x1f,
    0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,
    0x00,0x00,0x00,0x00,0x00,0x80,0xc0,0xe0,
    0x00,0x00,0x00,0x00,0x00,0xc0,0xf0,0xfc,
    0x00,0x00,0x00,0x00,0x00,0xe0,0xe0,0xe0,
    0x00,0x00,0x00,0x00,0x00,0xe0,0xf8,0xff,
    0x00,0x00,0x00,0x00,0x00,0x18,0x7e,0xff,
    0x00,0x00,0x00,0x00,0x00,0x01,0x03,0x07,
    0x00,0x00,0x00,0x00,0x00,0x03,0x0f,0x3f,
    0x00,0x00,0x00,0x00,0x00,0x07,0x07,0x07,
    0x00,0x00,0x00,0x00,0x00,0x07,0x1f,0xff,
    0x00,0x00,0x00,0x00,0x00,0xff,0xff,0x00,
    0x00,0x00,0x00,0x00,0x00,0xff,0xff,0xff,
    0x00,0x00,0x00,0x00,0x80,0x80,0xc0,0xc0,
    0x00,0x00,0x00,0x00,0x80,0xc0,0xe0,0xf0,
    0x00,0x00,0x00,0x00,0xc0,0xf0,0xfc,0xff,
    0x00,0x00,0x00,0x00,0xe0,0xf8,0xff,0xff,
    0x00,0x00,0x00,0x00,0xf0,0xf0,0xf0,0xf0,
    0x00,0x00,0x00,0x00,0x18,0x7e,0xff,0xff,
    0x00,0x00,0x00,0x00,0x01,0x01,0x03,0x03,
    0x00,0x00,0x00,0x00,0x01,0x03,0x07,0x0f,
    0x00,0x00,0x00,0x00,0x03,0x0f,0x3f,0xff,
    0x00,0x00,0x00,0x00,0x07,0x1f,0xff,0xff,
    0x00,0x00,0x00,0x00,0x0f,0x0f,0x0f,0x0f,
    0x00,0x00,0x00,0x00,0xff,0xff,0x00,0x00,
    0x00,0x00,0x00,0x00,0xff,0xff,0xff,0x00,
    0x00,0x00,0x00,0x00,0xff,0xff,0xff,0xff,
    0x00,0x00,0x00,0x80,0x80,0x00,0x00,0x00,
    0x00,0x00,0x00,0x80,0x80,0x80,0xc0,0xf8,
    0x00,0x00,0x00,0x80,0x80,0xc0,0xc0,0xc0,
    0x00,0x00,0x00,0x80,0xc0,0xe0,0xf0,0xf8,
    0x00,0x00,0x00,0xc0,0xf0,0xfc,0xff,0xff,
    0x00,0x00,0x00,0xe0,0xf8,0xff,0xff,0xff,
    0x00,0x00,0x00,0x18,0x7e,0xff,0xff,0xff,
    0x00,0x00,0x00,0xf8,0xf8,0xf8,0xf8,0xf8,
    0x00,0x00,0x00,0x01,0x01,0x00,0x00,0x00,
    0x00,0x00,0x00,0x01,0x01,0x01,0x03,0x1f,
    0x00,0x00,0x00,0x01,0x01,0x03,0x03,0x03,
    0x00,0x00,0x00,0x01,0x03,0x07,0x0f,0x1f,
    0x00,0x00,0x00,0x03,0x0f,0x3f,0xff,0xff,
    0x00,0x00,0x00,0x07,0x1f,0xff,0xff,0xff,
    0x00,0x00,0x00,0x1f,0x1f,0x1f,0x1f,0x1f,
    0x00,0x00,0x00,0xff,0xff,0x00,0x00,0x00,
    0x00,0x00,0x00,0xff,0xff,0xff,0x00,0x00,
    0x00,0x00,0x00,0xff,0xff,0xff,0xff,0x00,
    0x00,0x00,0x00,0xff,0xff,0xff,0xff,0xff,
    0x00,0x00,0x80,0x80,0x80,0xc0,0xe0,0xfc,
    0x00,0x00,0x80,0x80,0xc0,0xc0,0xe0,0xe0,
    0x00,0x00,0x80,0xc0,0xe0,0xf0,0xf8,0xfc,
    0x00,0x00,0xc0,0xf0,0xfc,0xff,0xff,0xff,
    0x00,0x00,0xe0,0xf8,0xff,0xff,0xff,0xff,
    0x00,0x00,0x18,0x7e,0xff,0xff,0xff,0xff,
    0x00,0x00,0xfc,0xfc,0xfc,0xfc,0xfc,0xfc,
    0x00,0x00,0x01,0x01,0x01,0x03,0x07,0x3f,
    0x00,0x00,0x01,0x01,0x03,0x03,0x07,0x07,
    0x00,0x00,0x01,0x03,0x07,0x0f,0x1f,0x3f,
    0x00,0x00,0x03,0x0f,0x3f,0xff,0xff,0xff,
    0x00,0x00,0x07,0x1f,0xff,0xff,0xff,0xff,
    0x00,0x00,0x3f,0x3f,0x3f,0x3f,0x3f,0x3f,
    0x00,0x00,0xff,0xff,0x00,0x00,0x00,0x00,
    0x00,0x00,0xff,0xff,0xff,0x00,0x00,0x00,
    0x00,0x00,0xff,0xff,0xff,0xff,0x00,0x00,
    0x00,0x00,0xff,0xff,0xff,0xff,0xff,0xff,
    0x00,0x80,0x80,0xc0,0xc0,0x80,0x80,0x00,
    0x00,0x80,0xc0,0xe0,0xf0,0xf8,0xfc,0xfe,
    0x00,0xc0,0xf0,0xfc,0xff,0xff,0xff,0xff,
    0x00,0xe0,0xf8,0xff,0xff,0xff,0xff,0xff,
    0x00,0x18,0x7e,0xff,0xff,0xff,0xff,0xff,
    0x00,0xfe,0xfe,0xfe,0xfe,0xfe,0xfe,0xfe,
    0x00,0x01,0x01,0x03,0x03,0x01,0x01,0x00,
    0x00,0x01,0x03,0x07,0x0f,0x1f,0x3f,0x7f,
    0x00,0x03,0x0f,0x3f,0xff,0xff,0xff,0xff,
    0x00,0x07,0x1f,0xff,0xff,0xff,0xff,0xff,
    0x00,0x7f,0x7f,0x7f,0x7f,0x7f,0x7f,0x7f,
    0x00,0xff,0xff,0x00,0x00,0x00,0x00,0x00,
    0x00,0xff,0xff,0xff,0x00,0x00,0x00,0x00,
    0x00,0xff,0xff,0xff,0xff,0x00,0x00,0x00,
    0x00,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0x80,0x80,0x00,0x00,0x00,0x00,0x00,0x00,
    0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,
    0x80,0x80,0x80,0xc0,0xc0,0xe0,0xe0,0xe0,
    0x80,0x80,0xc0,0xc0,0xe0,0xe0,0xf0,0xf0,
    0x80,0x80,0xc0,0xc0,0xe0,0xf0,0xfc,0xff,
    0x80,0xc0,0xc0,0xe0,0xe0,0xc0,0xc0,0x80,
    0x80,0xc0,0xe0,0xf0,0xf8,0xfc,0xfe,0xff,
    0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0xc0,0x80,0x00,0x00,0x00,0x00,0x00,0x00,
    0xc0,0xc0,0x00,0x00,0x00,0x00,0x00,0x00,
    0xc0,0xc0,0x80,0x80,0x00,0x00,0x00,0x00,
    0xc0,0xc0,0xc0,0x80,0x80,0x00,0x00,0x00,
    0xc0,0xc0,0xc0,0xc0,0xc0,0xc0,0xc0,0xc0,
    0xc0,0xc0,0xc0,0xe0,0xe0,0xf0,0xf0,0xf0,
    0xc0,0xc0,0xe0,0xe0,0xf0,0xf0,0xf8,0xf8,
    0xc0,0xc0,0xe0,0xe0,0xf0,0xfc,0xff,0xff,
    0xc0,0xe0,0xe0,0xf0,0xf0,0xe0,0xe0,0xc0,
    0xc0,0xe0,0xf0,0xf8,0xfc,0xfe,0xff,0xff,
    0xc0,0xf0,0xfc,0xff,0xff,0xff,0xff,0xff,
    0x60,0x60,0x60,0x60,0x60,0x60,0x60,0x60,
    0xe0,0xc0,0x80,0x00,0x00,0x00,0x00,0x00,
    0xe0,0xe0,0xc0,0xc0,0x80,0x80,0x00,0x00,
    0xe0,0xe0,0xe0,0x00,0x00,0x00,0x00,0x00,
    0xe0,0xe0,0xe0,0xc0,0xc0,0x80,0x80,0x80,
    0xe0,0xe0,0xe0,0xe0,0xe0,0xe0,0xe0,0xe0,
    0xe0,0xe0,0xe0,0xf0,0xf0,0xf8,0xf8,0xf8,
    0xe0,0xe0,0xf0,0xf0,0xf8,0xf8,0xfc,0xfc,
    0xe0,0xe0,0xf0,0xf8,0xfc,0xff,0xff,0xff,
    0xe0,0xf0,0xf0,0xf8,0xf8,0xf0,0xf0,0xe0,
    0xe0,0xf0,0xf8,0xfc,0xfe,0xff,0xff,0xff,
    0xe0,0xf8,0xff,0xff,0xff,0xff,0xff,0xff,
    0x30,0x30,0x30,0x30,0x30,0x30,0x30,0x30,
    0x70,0x70,0x70,0x70,0x70,0x70,0x70,0x70,
    0xf0,0xc0,0x00,0x00,0x00,0x00,0x00,0x00,
    0xf0,0xe0,0xc0,0x80,0x00,0x00,0x00,0x00,
    0xf0,0xf0,0xe0,0xe0,0xc0,0xc0,0x80,0x80,
    0xf0,0xf0,0xf0,0xe0,0xe0,0xc0,0xc0,0xc0,
    0xf0,0xf0,0xf0,0xf0,0x00,0x00,0x00,0x00,
    0xf0,0xf0,0xf0,0xf0,0xf0,0xf0,0xf0,0xf0,
    0xf0,0xf0,0xf0,0xf8,0xf8,0xfc,0xfc,0xfc,
    0xf0,0xf0,0xf8,0xf8,0xfc,0xfc,0xfe,0xfe,
    0xf0,0xf0,0xf8,0xfc,0xff,0xff,0xff,0xff,
    0xf0,0xf8,0xf8,0xfc,0xfc,0xf8,0xf8,0xf0,
    0xf0,0xf8,0xfc,0xfe,0xff,0xff,0xff,0xff,
    0xf0,0xfc,0xff,0xff,0xff,0xff,0xff,0xff,
    0x18,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,
    0x18,0x7e,0xff,0xff,0xff,0xff,0xff,0xff,
    0x38,0x38,0x38,0x38,0x38,0x38,0x38,0x38,
    0x78,0x78,0x78,0x78,0x78,0x78,0x78,0x78,
    0xf8,0xc0,0x80,0x80,0x80,0x00,0x00,0x00,
    0xf8,0xe0,0x00,0x00,0x00,0x00,0x00,0x00,
    0xf8,0xf0,0xe0,0xc0,0x80,0x00,0x00,0x00,
    0xf8,0xf8,0xf0,0xf0,0xe0,0xe0,0xc0,0xc0,
    0xf8,0xf8,0xf8,0xf0,0xf0,0xe0,0xe0,0xe0,
    0xf8,0xf8,0xf8,0xf8,0xf8,0x00,0x00,0x00,
    0xf8,0xf8,0xf8,0xf8,0xf8,0xf8,0xf8,0xf8,
    0xf8,0xf8,0xf8,0xfc,0xfc,0xfe,0xfe,0xfe,
    0xf8,0xf8,0xfc,0xfc,0xfe,0xfe,0xff,0xff,
    0xf8,0xf8,0xfc,0xff,0xff,0xff,0xff,0xff,
    0xf8,0xfc,0xfc,0xfe,0xfe,0xfc,0xfc,0xf8,
    0xf8,0xfc,0xfe,0xff,0xff,0xff,0xff,0xff,
    0x0c,0x0c,0x0c,0x0c,0x0c,0x0c,0x0c,0x0c,
    0x1c,0x1c,0x1c,0x1c,0x1c,0x1c,0x1c,0x1c,
    0x3c,0x3c,0x3c,0x3c,0x3c,0x3c,0x3c,0x3c,
    0xfc,0xe0,0xc0,0x80,0x80,0x80,0x00,0x00,
    0xfc,0xf0,0xc0,0x00,0x00,0x00,0x00,0x00,
    0xfc,0xf8,0xf0,0xe0,0xc0,0x80,0x00,0x00,
    0xfc,0xfc,0xf8,0xf8,0xf0,0xf0,0xe0,0xe0,
    0xfc,0xfc,0xfc,0xf8,0xf8,0xf0,0xf0,0xf0,
    0xfc,0xfc,0xfc,0xfc,0xfc,0xfc,0x00,0x00,
    0xfc,0xfc,0xfc,0xfc,0xfc,0xfc,0xfc,0xfc,
    0xfc,0xfc,0xfc,0xfe,0xfe,0xff,0xff,0xff,
    0xfc,0xfc,0xfe,0xfe,0xff,0xff,0xff,0xff,
    0xfc,0xfe,0xfe,0xff,0xff,0xfe,0xfe,0xfc,
    0xfc,0xfe,0xff,0xff,0xff,0xff,0xff,0xff,
    0xfc,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0x06,0x06,0x06,0x06,0x06,0x06,0x06,0x06,
    0x0e,0x0e,0x0e,0x0e,0x0e,0x0e,0x0e,0x0e,
    0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,
    0x7e,0x18,0x00,0x00,0x00,0x00,0x00,0x00,
    0x7e,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xfe,0xfc,0xf8,0xf0,0xe0,0xc0,0x80,0x00,
    0xfe,0xfe,0xfc,0xfc,0xf8,0xf8,0xf0,0xf0,
    0xfe,0xfe,0xfe,0xfc,0xfc,0xf8,0xf8,0xf8,
    0xfe,0xfe,0xfe,0xfe,0xfe,0xfe,0xfe,0x00,
    0xfe,0xfe,0xfe,0xfe,0xfe,0xfe,0xfe,0xfe,
    0xfe,0xfe,0xff,0xff,0xff,0xff,0xff,0xff,
    0xfe,0xff,0xff,0xff,0xff,0xff,0xff,0xfe,
    0x01,0x01,0x03,0x03,0x07,0x0f,0x3f,0xff,
    0x01,0x03,0x03,0x07,0x07,0x03,0x03,0x01,
    0x03,0x03,0x00,0x00,0x00,0x00,0x00,0x00,
    0x03,0x03,0x07,0x07,0x0f,0x3f,0xff,0xff,
    0x03,0x07,0x07,0x0f,0x0f,0x07,0x07,0x03,
    0x07,0x07,0x07,0x00,0x00,0x00,0x00,0x00,
    0x07,0x07,0x0f,0x1f,0x3f,0xff,0xff,0xff,
    0x07,0x0f,0x0f,0x1f,0x1f,0x0f,0x0f,0x07,
    0x0f,0x0f,0x0f,0x0f,0x00,0x00,0x00,0x00,
    0x0f,0x0f,0x1f,0x3f,0xff,0xff,0xff,0xff,
    0x0f,0x1f,0x1f,0x3f,0x3f,0x1f,0x1f,0x0f,
    0x1f,0x03,0x01,0x01,0x01,0x00,0x00,0x00,
    0x1f,0x1f,0x1f,0x1f,0x1f,0x00,0x00,0x00,
    0x1f,0x1f,0x3f,0xff,0xff,0xff,0xff,0xff,
    0x1f,0x3f,0x3f,0x7f,0x7f,0x3f,0x3f,0x1f,
    0x3f,0x07,0x03,0x01,0x01,0x01,0x00,0x00,
    0x3f,0x3f,0x3f,0x3f,0x3f,0x3f,0x00,0x00,
    0x3f,0x7f,0x7f,0xff,0xff,0x7f,0x7f,0x3f,
    0x7f,0x7f,0x7f,0x7f,0x7f,0x7f,0x7f,0x00,
    0x7f,0xff,0xff,0xff,0xff,0xff,0xff,0x7f,
    0xff,0xfc,0xf0,0xe0,0xc0,0xc0,0x80,0x80,
    0xff,0x7e,0x18,0x00,0x00,0x00,0x00,0x00,
    0xff,0x3f,0x0f,0x07,0x03,0x03,0x01,0x01,
    0xff,0xff,0xfc,0xf0,0xe0,0xe0,0xc0,0xc0,
    0xff,0xff,0x7e,0x18,0x00,0x00,0x00,0x00,
    0xff,0xff,0x3f,0x0f,0x07,0x07,0x03,0x03,
    0xff,0xff,0xff,0xfc,0xf8,0xf0,0xe0,0xe0,
    0xff,0xff,0xff,0x7e,0x18,0x00,0x00,0x00,
    0xff,0xff,0xff,0x3f,0x1f,0x0f,0x07,0x07,
    0xff,0xff,0xff,0xff,0xfc,0xf8,0xf0,0xf0,
    0xff,0xff,0xff,0xff,0x7e,0x18,0x00,0x00,
    0xff,0xff,0xff,0xff,0x3f,0x1f,0x0f,0x0f,
    0xff,0xff,0xff,0xff,0xff,0xfc,0xf8,0xf8,
    0xff,0xff,0xff,0xff,0xff,0x7e,0x18,0x00,
    0xff,0xff,0xff,0xff,0xff,0x3f,0x1f,0x1f,
    0xff,0xff,0xff,0xff,0xff,0xff,0x7e,0x18,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0x7e,
};

void VideoDecoder::Decode8x8_monoP16( uint8_t l0, uint8_t h0,   uint8_t l1, uint8_t h1,   uint8_t idd )
{
    const uint8_t* primitive = g_primitive + (uint16_t)idd * 8;
    for ( uint8_t y = 0; y < 8; ++y )
    {
        uint8_t v = pgm_read_byte(primitive + y);

        /*if ( v == 0 )
        {
            TFT_DATAPIN_SET(h0); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l0); TFT_SWAP_DATA_WR
            TFT_DATAPIN_SET(h0); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l0); TFT_SWAP_DATA_WR
            TFT_DATAPIN_SET(h0); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l0); TFT_SWAP_DATA_WR
            TFT_DATAPIN_SET(h0); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l0); TFT_SWAP_DATA_WR
            TFT_DATAPIN_SET(h0); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l0); TFT_SWAP_DATA_WR
            TFT_DATAPIN_SET(h0); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l0); TFT_SWAP_DATA_WR
            TFT_DATAPIN_SET(h0); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l0); TFT_SWAP_DATA_WR
            TFT_DATAPIN_SET(h0); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l0); TFT_SWAP_DATA_WR
            continue;
        }

        if ( v == 255 )
        {
            TFT_DATAPIN_SET(h1); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l1); TFT_SWAP_DATA_WR
            TFT_DATAPIN_SET(h1); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l1); TFT_SWAP_DATA_WR
            TFT_DATAPIN_SET(h1); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l1); TFT_SWAP_DATA_WR
            TFT_DATAPIN_SET(h1); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l1); TFT_SWAP_DATA_WR
            TFT_DATAPIN_SET(h1); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l1); TFT_SWAP_DATA_WR
            TFT_DATAPIN_SET(h1); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l1); TFT_SWAP_DATA_WR
            TFT_DATAPIN_SET(h1); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l1); TFT_SWAP_DATA_WR
            TFT_DATAPIN_SET(h1); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l1); TFT_SWAP_DATA_WR
            continue;
        }*/
        
        if ( (v & 1) != 0 )
        { TFT_DATAPIN_SET(h1); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l1); TFT_SWAP_DATA_WR } else
        { TFT_DATAPIN_SET(h0); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l0); TFT_SWAP_DATA_WR }

        if ( (v & 2) != 0 )
        { TFT_DATAPIN_SET(h1); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l1); TFT_SWAP_DATA_WR } else
        { TFT_DATAPIN_SET(h0); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l0); TFT_SWAP_DATA_WR }

        if ( (v & 4) != 0 )
        { TFT_DATAPIN_SET(h1); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l1); TFT_SWAP_DATA_WR } else
        { TFT_DATAPIN_SET(h0); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l0); TFT_SWAP_DATA_WR }

        if ( (v & 8) != 0 )
        { TFT_DATAPIN_SET(h1); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l1); TFT_SWAP_DATA_WR } else
        { TFT_DATAPIN_SET(h0); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l0); TFT_SWAP_DATA_WR }

        if ( (v & 16) != 0 )
        { TFT_DATAPIN_SET(h1); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l1); TFT_SWAP_DATA_WR } else
        { TFT_DATAPIN_SET(h0); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l0); TFT_SWAP_DATA_WR }

        if ( (v & 32) != 0 )
        { TFT_DATAPIN_SET(h1); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l1); TFT_SWAP_DATA_WR } else
        { TFT_DATAPIN_SET(h0); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l0); TFT_SWAP_DATA_WR }

        if ( (v & 64) != 0 )
        { TFT_DATAPIN_SET(h1); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l1); TFT_SWAP_DATA_WR } else
        { TFT_DATAPIN_SET(h0); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l0); TFT_SWAP_DATA_WR }

        if ( (v & 128) != 0 )
        { TFT_DATAPIN_SET(h1); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l1); TFT_SWAP_DATA_WR } else
        { TFT_DATAPIN_SET(h0); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l0); TFT_SWAP_DATA_WR }
    }
}

void VideoDecoder::Decode8x8_Primitive4x2( uint8_t l0, uint8_t h0,   uint8_t l1, uint8_t h1,  uint8_t v )
{
    if ( (v & 1) != 0 )
    { TFT_DATAPIN_SET(h1); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l1); TFT_SWAP_DATA_WR
      TFT_DATAPIN_SET(h1); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l1); TFT_SWAP_DATA_WR
      TFT_DATAPIN_SET(h1); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l1); TFT_SWAP_DATA_WR
      TFT_DATAPIN_SET(h1); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l1); TFT_SWAP_DATA_WR } else
    { TFT_DATAPIN_SET(h0); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l0); TFT_SWAP_DATA_WR
      TFT_DATAPIN_SET(h0); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l0); TFT_SWAP_DATA_WR
      TFT_DATAPIN_SET(h0); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l0); TFT_SWAP_DATA_WR
      TFT_DATAPIN_SET(h0); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l0); TFT_SWAP_DATA_WR }

    if ( (v & 2) != 0 )
    { TFT_DATAPIN_SET(h1); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l1); TFT_SWAP_DATA_WR
      TFT_DATAPIN_SET(h1); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l1); TFT_SWAP_DATA_WR
      TFT_DATAPIN_SET(h1); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l1); TFT_SWAP_DATA_WR
      TFT_DATAPIN_SET(h1); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l1); TFT_SWAP_DATA_WR } else
    { TFT_DATAPIN_SET(h0); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l0); TFT_SWAP_DATA_WR
      TFT_DATAPIN_SET(h0); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l0); TFT_SWAP_DATA_WR
      TFT_DATAPIN_SET(h0); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l0); TFT_SWAP_DATA_WR
      TFT_DATAPIN_SET(h0); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l0); TFT_SWAP_DATA_WR }

    if ( (v & 1) != 0 )
    { TFT_DATAPIN_SET(h1); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l1); TFT_SWAP_DATA_WR
      TFT_DATAPIN_SET(h1); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l1); TFT_SWAP_DATA_WR
      TFT_DATAPIN_SET(h1); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l1); TFT_SWAP_DATA_WR
      TFT_DATAPIN_SET(h1); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l1); TFT_SWAP_DATA_WR } else
    { TFT_DATAPIN_SET(h0); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l0); TFT_SWAP_DATA_WR
      TFT_DATAPIN_SET(h0); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l0); TFT_SWAP_DATA_WR
      TFT_DATAPIN_SET(h0); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l0); TFT_SWAP_DATA_WR
      TFT_DATAPIN_SET(h0); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l0); TFT_SWAP_DATA_WR }

    if ( (v & 2) != 0 )
    { TFT_DATAPIN_SET(h1); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l1); TFT_SWAP_DATA_WR
      TFT_DATAPIN_SET(h1); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l1); TFT_SWAP_DATA_WR
      TFT_DATAPIN_SET(h1); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l1); TFT_SWAP_DATA_WR
      TFT_DATAPIN_SET(h1); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l1); TFT_SWAP_DATA_WR } else
    { TFT_DATAPIN_SET(h0); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l0); TFT_SWAP_DATA_WR
      TFT_DATAPIN_SET(h0); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l0); TFT_SWAP_DATA_WR
      TFT_DATAPIN_SET(h0); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l0); TFT_SWAP_DATA_WR
      TFT_DATAPIN_SET(h0); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l0); TFT_SWAP_DATA_WR }

    if ( (v & 4) != 0 )
    { TFT_DATAPIN_SET(h1); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l1); TFT_SWAP_DATA_WR
      TFT_DATAPIN_SET(h1); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l1); TFT_SWAP_DATA_WR
      TFT_DATAPIN_SET(h1); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l1); TFT_SWAP_DATA_WR
      TFT_DATAPIN_SET(h1); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l1); TFT_SWAP_DATA_WR } else
    { TFT_DATAPIN_SET(h0); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l0); TFT_SWAP_DATA_WR
      TFT_DATAPIN_SET(h0); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l0); TFT_SWAP_DATA_WR
      TFT_DATAPIN_SET(h0); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l0); TFT_SWAP_DATA_WR
      TFT_DATAPIN_SET(h0); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l0); TFT_SWAP_DATA_WR }

    if ( (v & 8) != 0 )
    { TFT_DATAPIN_SET(h1); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l1); TFT_SWAP_DATA_WR
      TFT_DATAPIN_SET(h1); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l1); TFT_SWAP_DATA_WR
      TFT_DATAPIN_SET(h1); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l1); TFT_SWAP_DATA_WR
      TFT_DATAPIN_SET(h1); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l1); TFT_SWAP_DATA_WR } else
    { TFT_DATAPIN_SET(h0); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l0); TFT_SWAP_DATA_WR
      TFT_DATAPIN_SET(h0); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l0); TFT_SWAP_DATA_WR
      TFT_DATAPIN_SET(h0); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l0); TFT_SWAP_DATA_WR
      TFT_DATAPIN_SET(h0); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l0); TFT_SWAP_DATA_WR }

    if ( (v & 4) != 0 )
    { TFT_DATAPIN_SET(h1); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l1); TFT_SWAP_DATA_WR
      TFT_DATAPIN_SET(h1); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l1); TFT_SWAP_DATA_WR
      TFT_DATAPIN_SET(h1); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l1); TFT_SWAP_DATA_WR
      TFT_DATAPIN_SET(h1); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l1); TFT_SWAP_DATA_WR } else
    { TFT_DATAPIN_SET(h0); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l0); TFT_SWAP_DATA_WR
      TFT_DATAPIN_SET(h0); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l0); TFT_SWAP_DATA_WR
      TFT_DATAPIN_SET(h0); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l0); TFT_SWAP_DATA_WR
      TFT_DATAPIN_SET(h0); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l0); TFT_SWAP_DATA_WR }

    if ( (v & 8) != 0 )
    { TFT_DATAPIN_SET(h1); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l1); TFT_SWAP_DATA_WR
      TFT_DATAPIN_SET(h1); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l1); TFT_SWAP_DATA_WR
      TFT_DATAPIN_SET(h1); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l1); TFT_SWAP_DATA_WR
      TFT_DATAPIN_SET(h1); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l1); TFT_SWAP_DATA_WR } else
    { TFT_DATAPIN_SET(h0); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l0); TFT_SWAP_DATA_WR
      TFT_DATAPIN_SET(h0); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l0); TFT_SWAP_DATA_WR
      TFT_DATAPIN_SET(h0); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l0); TFT_SWAP_DATA_WR
      TFT_DATAPIN_SET(h0); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l0); TFT_SWAP_DATA_WR }

    if ( (v & 16) != 0 )
    { TFT_DATAPIN_SET(h1); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l1); TFT_SWAP_DATA_WR
      TFT_DATAPIN_SET(h1); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l1); TFT_SWAP_DATA_WR
      TFT_DATAPIN_SET(h1); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l1); TFT_SWAP_DATA_WR
      TFT_DATAPIN_SET(h1); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l1); TFT_SWAP_DATA_WR } else
    { TFT_DATAPIN_SET(h0); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l0); TFT_SWAP_DATA_WR
      TFT_DATAPIN_SET(h0); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l0); TFT_SWAP_DATA_WR
      TFT_DATAPIN_SET(h0); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l0); TFT_SWAP_DATA_WR
      TFT_DATAPIN_SET(h0); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l0); TFT_SWAP_DATA_WR }

    if ( (v & 32) != 0 )
    { TFT_DATAPIN_SET(h1); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l1); TFT_SWAP_DATA_WR
      TFT_DATAPIN_SET(h1); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l1); TFT_SWAP_DATA_WR
      TFT_DATAPIN_SET(h1); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l1); TFT_SWAP_DATA_WR
      TFT_DATAPIN_SET(h1); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l1); TFT_SWAP_DATA_WR } else
    { TFT_DATAPIN_SET(h0); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l0); TFT_SWAP_DATA_WR
      TFT_DATAPIN_SET(h0); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l0); TFT_SWAP_DATA_WR
      TFT_DATAPIN_SET(h0); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l0); TFT_SWAP_DATA_WR
      TFT_DATAPIN_SET(h0); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l0); TFT_SWAP_DATA_WR }

    if ( (v & 16) != 0 )
    { TFT_DATAPIN_SET(h1); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l1); TFT_SWAP_DATA_WR
      TFT_DATAPIN_SET(h1); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l1); TFT_SWAP_DATA_WR
      TFT_DATAPIN_SET(h1); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l1); TFT_SWAP_DATA_WR
      TFT_DATAPIN_SET(h1); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l1); TFT_SWAP_DATA_WR } else
    { TFT_DATAPIN_SET(h0); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l0); TFT_SWAP_DATA_WR
      TFT_DATAPIN_SET(h0); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l0); TFT_SWAP_DATA_WR
      TFT_DATAPIN_SET(h0); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l0); TFT_SWAP_DATA_WR
      TFT_DATAPIN_SET(h0); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l0); TFT_SWAP_DATA_WR }

    if ( (v & 32) != 0 )
    { TFT_DATAPIN_SET(h1); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l1); TFT_SWAP_DATA_WR
      TFT_DATAPIN_SET(h1); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l1); TFT_SWAP_DATA_WR
      TFT_DATAPIN_SET(h1); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l1); TFT_SWAP_DATA_WR
      TFT_DATAPIN_SET(h1); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l1); TFT_SWAP_DATA_WR } else
    { TFT_DATAPIN_SET(h0); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l0); TFT_SWAP_DATA_WR
      TFT_DATAPIN_SET(h0); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l0); TFT_SWAP_DATA_WR
      TFT_DATAPIN_SET(h0); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l0); TFT_SWAP_DATA_WR
      TFT_DATAPIN_SET(h0); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l0); TFT_SWAP_DATA_WR }

    if ( (v & 64) != 0 )
    { TFT_DATAPIN_SET(h1); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l1); TFT_SWAP_DATA_WR
      TFT_DATAPIN_SET(h1); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l1); TFT_SWAP_DATA_WR
      TFT_DATAPIN_SET(h1); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l1); TFT_SWAP_DATA_WR
      TFT_DATAPIN_SET(h1); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l1); TFT_SWAP_DATA_WR } else
    { TFT_DATAPIN_SET(h0); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l0); TFT_SWAP_DATA_WR
      TFT_DATAPIN_SET(h0); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l0); TFT_SWAP_DATA_WR
      TFT_DATAPIN_SET(h0); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l0); TFT_SWAP_DATA_WR
      TFT_DATAPIN_SET(h0); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l0); TFT_SWAP_DATA_WR }

    if ( (v & 128) != 0 )
    { TFT_DATAPIN_SET(h1); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l1); TFT_SWAP_DATA_WR
      TFT_DATAPIN_SET(h1); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l1); TFT_SWAP_DATA_WR
      TFT_DATAPIN_SET(h1); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l1); TFT_SWAP_DATA_WR
      TFT_DATAPIN_SET(h1); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l1); TFT_SWAP_DATA_WR } else
    { TFT_DATAPIN_SET(h0); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l0); TFT_SWAP_DATA_WR
      TFT_DATAPIN_SET(h0); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l0); TFT_SWAP_DATA_WR
      TFT_DATAPIN_SET(h0); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l0); TFT_SWAP_DATA_WR
      TFT_DATAPIN_SET(h0); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l0); TFT_SWAP_DATA_WR }

    if ( (v & 64) != 0 )
    { TFT_DATAPIN_SET(h1); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l1); TFT_SWAP_DATA_WR
      TFT_DATAPIN_SET(h1); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l1); TFT_SWAP_DATA_WR
      TFT_DATAPIN_SET(h1); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l1); TFT_SWAP_DATA_WR
      TFT_DATAPIN_SET(h1); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l1); TFT_SWAP_DATA_WR } else
    { TFT_DATAPIN_SET(h0); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l0); TFT_SWAP_DATA_WR
      TFT_DATAPIN_SET(h0); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l0); TFT_SWAP_DATA_WR
      TFT_DATAPIN_SET(h0); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l0); TFT_SWAP_DATA_WR
      TFT_DATAPIN_SET(h0); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l0); TFT_SWAP_DATA_WR }

    if ( (v & 128) != 0 )
    { TFT_DATAPIN_SET(h1); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l1); TFT_SWAP_DATA_WR
      TFT_DATAPIN_SET(h1); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l1); TFT_SWAP_DATA_WR
      TFT_DATAPIN_SET(h1); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l1); TFT_SWAP_DATA_WR
      TFT_DATAPIN_SET(h1); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l1); TFT_SWAP_DATA_WR } else
    { TFT_DATAPIN_SET(h0); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l0); TFT_SWAP_DATA_WR
      TFT_DATAPIN_SET(h0); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l0); TFT_SWAP_DATA_WR
      TFT_DATAPIN_SET(h0); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l0); TFT_SWAP_DATA_WR
      TFT_DATAPIN_SET(h0); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l0); TFT_SWAP_DATA_WR }
}

void VideoDecoder::Decode8x8_cnt16( uint8_t l0, uint8_t h0,   uint8_t l1, uint8_t h1,   uint8_t c0 )
{
    for ( uint8_t x = 0; x < c0; ++x )
    {
        TFT_DATAPIN_SET(h0); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l0); TFT_SWAP_DATA_WR
        TFT_DATAPIN_SET(h0); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l0); TFT_SWAP_DATA_WR
        TFT_DATAPIN_SET(h0); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l0); TFT_SWAP_DATA_WR
        TFT_DATAPIN_SET(h0); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l0); TFT_SWAP_DATA_WR
        TFT_DATAPIN_SET(h0); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l0); TFT_SWAP_DATA_WR
        TFT_DATAPIN_SET(h0); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l0); TFT_SWAP_DATA_WR
        TFT_DATAPIN_SET(h0); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l0); TFT_SWAP_DATA_WR
        TFT_DATAPIN_SET(h0); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l0); TFT_SWAP_DATA_WR
    }

    c0 = 8-c0;
    for ( uint8_t x = 0; x < c0; ++x )
    {
        TFT_DATAPIN_SET(h1); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l1); TFT_SWAP_DATA_WR
        TFT_DATAPIN_SET(h1); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l1); TFT_SWAP_DATA_WR
        TFT_DATAPIN_SET(h1); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l1); TFT_SWAP_DATA_WR
        TFT_DATAPIN_SET(h1); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l1); TFT_SWAP_DATA_WR
        TFT_DATAPIN_SET(h1); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l1); TFT_SWAP_DATA_WR
        TFT_DATAPIN_SET(h1); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l1); TFT_SWAP_DATA_WR
        TFT_DATAPIN_SET(h1); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l1); TFT_SWAP_DATA_WR
        TFT_DATAPIN_SET(h1); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(l1); TFT_SWAP_DATA_WR
    }
}

void VideoDecoder::Decode8x8_Gradient( uint16_t color )
{
    for ( uint8_t y = 0; y < 8; ++y )
    {
        for ( uint8_t x = 0; x < 8; ++x )
        {
            TFT_DATAPIN_SET(color >> 8); TFT_SWAP_DATA_WR TFT_DATAPIN_SET(color & 0xFF); TFT_SWAP_DATA_WR
        }
        color += 1 + 64 + 2048;
    }
}
